<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[HITCaiDog's Blog]]></title>
  <subtitle><![CDATA[平常心,平常心！！！]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://HITCaiDog.me/"/>
  <updated>2016-01-22T15:30:43.577Z</updated>
  <id>http://HITCaiDog.me/</id>
  
  <author>
    <name><![CDATA[XinLe]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[TLS协议握手过程]]></title>
    <link href="http://HITCaiDog.me/2016/01/22/TLS%E5%8D%8F%E8%AE%AE%E6%8F%A1%E6%89%8B%E8%BF%87%E7%A8%8B/"/>
    <id>http://HITCaiDog.me/2016/01/22/TLS协议握手过程/</id>
    <published>2016-01-22T12:33:26.000Z</published>
    <updated>2016-01-22T15:30:43.577Z</updated>
    <content type="html"><![CDATA[<h2 id="TLS_u63E1_u624B_u6574_u4E2A_u8FC7_u7A0B"><a href="#TLS_u63E1_u624B_u6574_u4E2A_u8FC7_u7A0B" class="headerlink" title="TLS握手整个过程"></a>TLS握手整个过程</h2><p><img src="http://i.imgur.com/bEyG2V7.png" alt=""></p>
<h2 id="Client_Hello"><a href="#Client_Hello" class="headerlink" title="Client Hello"></a>Client Hello</h2><p>这是TLS握手的第一步，由客户端发起请求。此协议主要包括了一个客户端生成的随机字符串（用来下面生成session key），还有客户端支持的加密套件列表。如图：</p>
<p><img src="http://i.imgur.com/ObZObBx.png" alt=""></p>
<p>##Server Hello</p>
<p>服务器收到客户端的Client Hello数据包之后，根据客户端发来的加密套件列表，选择一个加密套件，也生成一个随机字符串返回给客户端。我们看到下图中的加密套件为，密钥交换算法使用ECDHE_RSA，对称加密算法使用AES_256_GCM_SHA384,如图：</p>
<p><img src="http://i.imgur.com/Dv9xmKd.png" alt=""></p>
<p>##Server Certificate</p>
<p>接着服务器再返回证书列表，包括证书链及域名证书。返回的证书用来给客户端验证当前连接服务器的身份，防止中间人攻击。</p>
<p>##Server Key Exchange</p>
<p>Server Key Exchange协议包，由服务器返回，主要目的是与客户端交换用于数据对称加密的密钥。如图：</p>
<p><img src="http://i.imgur.com/D8ga0P9.png" alt=""></p>
<h2 id="Server_Hello_Done"><a href="#Server_Hello_Done" class="headerlink" title="Server Hello Done"></a>Server Hello Done</h2><p>服务器返回此协议数据，告诉客户端已经完成返回所需用于密钥交换的数据。服务器等待客户端响应。</p>
<h2 id="Client_Key_Exchange"><a href="#Client_Key_Exchange" class="headerlink" title="Client Key Exchange"></a>Client Key Exchange</h2><p>客户端根据服务器返回的DH密钥数据生成DH公共数据也发给服务器，用来生成最终的pre-master-secret。如图：</p>
<p><img src="http://i.imgur.com/KAhvJiD.png" alt=""></p>
<p>##Change Cipher Spec</p>
<p>此协议用于客户端和服务器相互告知也完成密钥交换过程，可以切换到对称加密过程。<br>到这里大概的TLS握手过程就结束了。为解决本文中的问题，还需要了解密钥交换的算法，RSA和Diffie–Hellman。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="TLS_u63E1_u624B_u6574_u4E2A_u8FC7_u7A0B"><a href="#TLS_u63E1_u624B_u6574_u4E2A_u8FC7_u7A0B" class="headerlink" title="TLS握手整个过程"></a]]>
    </summary>
    
      <category term="fiddler" scheme="http://HITCaiDog.me/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Birthday]]></title>
    <link href="http://HITCaiDog.me/2015/12/31/Birthday/"/>
    <id>http://HITCaiDog.me/2015/12/31/Birthday/</id>
    <published>2015-12-31T12:41:04.000Z</published>
    <updated>2016-01-01T08:19:03.532Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">HITCaiDog’s Blog</a>! This is my very first post. There are some important steps listed as follows. </p>
<h2 id="Preparation_28For_Windows_29"><a href="#Preparation_28For_Windows_29" class="headerlink" title="Preparation(For Windows)"></a>Preparation(For Windows)</h2><p><a href="http://nodejs.org/" target="_blank" rel="external">node.js</a></p>
<p><a href="http://git-scm.com/" target="_blank" rel="external">git</a></p>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>###Run Git CMD,input</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure>
<p>###Enter the directory you want to store hexo(such as E:\hexo),then input</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>Hexo will automatically create all the files needed for the site in the target folder.</p>
<p>###Change theme(not essential)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next.git themes/hexo-theme-next</span><br></pre></td></tr></table></figure>
<p>Modify the config.yml under the directory of Hexo,change the value of theme to hexo-theme-next.</p>
<p>Maybe useful:(update the theme file)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> theme/hexo-theme-next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p>###Generation</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate \\(or hexo g),generate the <span class="built_in">local</span> blog files.</span><br><span class="line">hexo server \\(or hexo s),start the <span class="built_in">local</span> server <span class="keyword">for</span> testing purposes.</span><br></pre></td></tr></table></figure>
<p>You can preview on <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a></p>
<h2 id="Register_on_Github"><a href="#Register_on_Github" class="headerlink" title="Register on Github"></a><a href="http://www.github.com/" target="_blank" rel="external">Register on Github</a></h2><p>Register a new account.</p>
<p>Build a repository named “username.github.io”</p>
<h2 id="SSH_Keys_28By_GitBash_29"><a href="#SSH_Keys_28By_GitBash_29" class="headerlink" title="SSH Keys(By GitBash)"></a>SSH Keys(By GitBash)</h2><p>###检查电脑上现有的SSH Keys</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure>
<p>如果显示”No such file or directory”，则进入第三步，否则继续。</p>
<p>###备份和移除原来的SSH Keys设置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">config  id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">mkdir key_backup</span><br><span class="line">cp id_rsa* key_backup</span><br><span class="line">rm id_rsa*</span><br></pre></td></tr></table></figure>
<p>###生成新的SSH Keys</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"yourmail@mail.com"</span></span><br></pre></td></tr></table></figure>
<p>后续操作按提示完成即可(输入加密串后布署失败，为空时布署成功)。</p>
<p>###添加SSH Keys到Github</p>
<p>在本机设置SSH Keys后，需要添加到Github上，以完成SSH链接的设置。</p>
<p>复制刚刚生成的密钥文件id_rsa.pub的内容，粘贴到Github上用户设置-SSH Keys中Add Key。</p>
<p>###测试</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>###设置帐号信息</p>
<p>Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">git config --global user.email <span class="string">"yourmail@mail.com"</span></span><br></pre></td></tr></table></figure>
<p>##部署到Github</p>
<p>配置hexo中的配置文件：_config.yml</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    <span class="built_in">type</span>: git</span><br><span class="line">    repository: git@github.com:用户名/用户名.github.com.git</span><br><span class="line">    (我的:repository:git@github.com:BigCaiDog/BigCaiDog.github.com.git)</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>
<p>然后执行命令：</p>
<figure class="highlight"><figcaption><span>clean</span><a href="//清除缓存">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate&#10;hexo deploy //&#24067;&#32626;</span><br></pre></td></tr></table></figure>
<p>此时，在博客的根目录下会生成一个文件夹：.deploy</p>
<p>然后我们把这个文件夹里面的文件都push到刚才新建那个项目就OK了。几分钟过后，就可以打开你的用户名.github.io看到你的博客了。</p>
<h2 id="u6DFB_u52A0_u65B0_u6587_u7AE0"><a href="#u6DFB_u52A0_u65B0_u6587_u7AE0" class="headerlink" title="添加新文章"></a>添加新文章</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"name"</span></span><br></pre></td></tr></table></figure>
<p>编辑name.md文件并保存，重新生成布置即可。</p>
<p>##绑定域名</p>
<p>方法一：在Repository的根目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如cnfeat.com。</p>
<p>方法二：到我的github仓库，点击右下角的「Download ZIP」，下载源文件，解压，找到CNAME文件，用记事本打开，将cnfeat.com修改成你的域名，放进Hexo\source目录下，用hexo命令提交上去。</p>
<p>###DNS设置</p>
<p>用DNSpod，快，免费，稳定。</p>
<p>注册DNSpod，添加域名，如下图设置。</p>
<p><img src="http://i.imgur.com/a0fiGO8.png" alt=""></p>
<p>其中A的两条记录指向的ip地址是github Pages的提供的ip</p>
<p>192.30.252.153</p>
<p>192.30.252.154</p>
<p>如博客不能登录，有可能是github更改了空间服务的ip地址，记得及时到在<a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/" target="_blank" rel="external">GitHub Pages</a>查看最新的ip即可</p>
<p>www指定的记录是你在github注册的仓库。</p>
<p>###去Godaddy修改DNS地址</p>
<p>更改godaddy的Nameservers为DNSpod的NameServers。</p>
<p><img src="http://i.imgur.com/LPZqQHc.jpg" alt=""></p>
<p><img src="http://i.imgur.com/ey7jqjH.png" alt=""></p>
<p>##安装插件</p>
<p>添加sitemap和feed插件</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap</span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-feed</span><br></pre></td></tr></table></figure>
<p>修改_config.yml，增加以下内容</p>
<p>###Extensions</p>
<p>Plugins:</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> hexo-generator-feed</span><br><span class="line"></span>-<span class="ruby"> hexo-generator-sitemap</span></span><br></pre></td></tr></table></figure>
<p>###Feed Atom</p>
<p>feed:</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">type</span>: <span class="string">atom</span></span><br><span class="line"><span class="attribute">path</span>: <span class="string">atom.xml</span></span><br><span class="line"><span class="attribute">limit</span>: <span class="string">20</span></span><br></pre></td></tr></table></figure>
<p>###sitemap</p>
<p>sitemap:</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">path</span>: <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure>
<p>Hexo上传README文件</p>
<p>Github的版本库通常建议同时附上README.md说明文件，但是hexo默认情况下会把所有md文件解析成html文件，所以即使你在线生成了README.md，它也会在你下一次部署时被删去。怎么解决呢？</p>
<p>在执行hexo deploy前把在本地写好的README.md文件复制到.deploy文件夹中，再去执行hexo deploy。</p>
<p>###404页面</p>
<p>GitHub Pages有提供制作404页面的指引：<a href="https://help.github.com/articles/custom-404-pages/" target="_blank" rel="external">Custom 404 Pages</a>。</p>
<p>直接在根目录下创建自己的404.html或者404.md就可以。但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也是不起作用的。</p>
<p>推荐使用<a href="http://www.qq.com/404/" target="_blank" rel="external">腾讯公益404</a>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">HITCaiDog’s Blog</a>! This is my very first post. There are some impo]]>
    </summary>
    
      <category term="Random" scheme="http://HITCaiDog.me/tags/Random/"/>
    
  </entry>
  
</feed>
